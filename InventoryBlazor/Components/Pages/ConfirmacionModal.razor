<div class="modal show d-block" tabindex="-1"
     style="background-color: rgba(0,0,0,0.5); position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; z-index: 1050;">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-@Color">
            <div class="modal-header bg-@Color text-white">
                <h5 class="modal-title">
                    <i class="@Icono me-2"></i>@Titulo
                </h5>
                <button type="button" class="btn-close" aria-label="Cerrar" @onclick="Cancelar"></button>
            </div>

            <div class="modal-body">
                <p>@Mensaje</p>
            </div>

            <div class="modal-footer d-flex justify-content-end">
                <button class="btn btn-@Color" @onclick="Confirmar">
                    <i class="@Icono me-1"></i>@TextoBotonConfirmar
                </button>
                <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Titulo { get; set; } = "Confirmar acción";
    [Parameter] public string Mensaje { get; set; } = "¿Estás seguro de continuar?";
    [Parameter] public string TextoBotonConfirmar { get; set; } = "Confirmar";
    [Parameter] public string Color { get; set; } = "primary"; // Ej: danger, warning, success
    [Parameter] public string Icono { get; set; } = "bi bi-question-circle"; // Bootstrap Icons

    [Parameter] public EventCallback OnConfirmar { get; set; }
    [Parameter] public EventCallback OnCancelar { get; set; }

    private async Task Confirmar() => await OnConfirmar.InvokeAsync();
    private async Task Cancelar() => await OnCancelar.InvokeAsync();
}